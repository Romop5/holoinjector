#include "GL/gl.h"
#include "redirector_base.hpp"
#include <vector>
#include <string>

namespace ve
{
    /**
     * @brief Defines mechanism to redirect calls, specific to OpenGL
     */
    class OpenglRedirectorBase: public RedirectorBase
    {
        protected:
        OpenglRedirectorBase();
        /// Register subset of OpenGL API, specified in 'symbols'
        void registerOpenGLSymbols(const std::vector<std::string>& symbols, SymbolRedirection& redirector);

        public:
        /*
         * Declarations of virtual OpenGL API calls that can be overloaded.
         * @note when function is not overloaded, or overloaded function is called,
         * parameters are routed to the original OpenGL API
         */
        virtual void glClearIndex(GLfloat c);
        virtual void glClearColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha);
        virtual void glClear(GLbitfield mask);
        virtual void glIndexMask(GLuint mask);
        virtual void glColorMask(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha);
        virtual void glAlphaFunc(GLenum func,GLclampf ref);
        virtual void glBlendFunc(GLenum sfactor,GLenum dfactor);
        virtual void glLogicOp(GLenum opcode);
        virtual void glCullFace(GLenum mode);
        virtual void glFrontFace(GLenum mode);
        virtual void glPointSize(GLfloat size);
        virtual void glLineWidth(GLfloat width);
        virtual void glLineStipple(GLint factor,GLushort pattern);
        virtual void glPolygonMode(GLenum face,GLenum mode);
        virtual void glPolygonOffset(GLfloat factor,GLfloat units);
        virtual void glPolygonStipple(const GLubyte* mask);
        virtual void glGetPolygonStipple(GLubyte* mask);
        virtual void glEdgeFlag(GLboolean flag);
        virtual void glEdgeFlagv(const GLboolean* flag);
        virtual void glScissor(GLint x,GLint y,GLsizei width,GLsizei height);
        virtual void glClipPlane(GLenum plane,const GLdouble* equation);
        virtual void glGetClipPlane(GLenum plane,GLdouble* equation);
        virtual void glDrawBuffer(GLenum mode);
        virtual void glReadBuffer(GLenum mode);
        virtual void glEnable(GLenum cap);
        virtual void glDisable(GLenum cap);
        virtual GLboolean glIsEnabled(GLenum cap);
        virtual void glEnableClientState(GLenum cap);
        virtual void glDisableClientState(GLenum cap);
        virtual void glGetBooleanv(GLenum pname,GLboolean* params);
        virtual void glGetDoublev(GLenum pname,GLdouble* params);
        virtual void glGetFloatv(GLenum pname,GLfloat* params);
        virtual void glGetIntegerv(GLenum pname,GLint* params);
        virtual void glPushAttrib(GLbitfield mask);
        virtual void glPopAttrib(void);
        virtual void glPushClientAttrib(GLbitfield mask);
        virtual void glPopClientAttrib(void);
        virtual GLint glRenderMode(GLenum mode);
        virtual GLenum glGetError(void);
        virtual const GLubyte* glGetString(GLenum name);
        virtual void glFinish(void);
        virtual void glFlush(void);
        virtual void glHint(GLenum target,GLenum mode);
        virtual void glClearDepth(GLclampd depth);
        virtual void glDepthFunc(GLenum func);
        virtual void glDepthMask(GLboolean flag);
        virtual void glDepthRange(GLclampd near_val,GLclampd far_val);
        virtual void glClearAccum(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
        virtual void glAccum(GLenum op,GLfloat value);
        virtual void glMatrixMode(GLenum mode);
        virtual void glOrtho(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val);
        virtual void glFrustum(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val);
        virtual void glViewport(GLint x,GLint y,GLsizei width,GLsizei height);
        virtual void glPushMatrix(void);
        virtual void glPopMatrix(void);
        virtual void glLoadIdentity(void);
        virtual void glLoadMatrixd(const GLdouble* m);
        virtual void glLoadMatrixf(const GLfloat* m);
        virtual void glMultMatrixd(const GLdouble* m);
        virtual void glMultMatrixf(const GLfloat* m);
        virtual void glRotated(GLdouble angle,GLdouble x,GLdouble y,GLdouble z);
        virtual void glRotatef(GLfloat angle,GLfloat x,GLfloat y,GLfloat z);
        virtual void glScaled(GLdouble x,GLdouble y,GLdouble z);
        virtual void glScalef(GLfloat x,GLfloat y,GLfloat z);
        virtual void glTranslated(GLdouble x,GLdouble y,GLdouble z);
        virtual void glTranslatef(GLfloat x,GLfloat y,GLfloat z);
        virtual GLboolean glIsList(GLuint list);
        virtual void glDeleteLists(GLuint list,GLsizei range);
        virtual GLuint glGenLists(GLsizei range);
        virtual void glNewList(GLuint list,GLenum mode);
        virtual void glEndList(void);
        virtual void glCallList(GLuint list);
        virtual void glCallLists(GLsizei n,GLenum type,const GLvoid* lists);
        virtual void glListBase(GLuint base);
        virtual void glBegin(GLenum mode);
        virtual void glEnd(void);
        virtual void glVertex2d(GLdouble x,GLdouble y);
        virtual void glVertex2f(GLfloat x,GLfloat y);
        virtual void glVertex2i(GLint x,GLint y);
        virtual void glVertex2s(GLshort x,GLshort y);
        virtual void glVertex3d(GLdouble x,GLdouble y,GLdouble z);
        virtual void glVertex3f(GLfloat x,GLfloat y,GLfloat z);
        virtual void glVertex3i(GLint x,GLint y,GLint z);
        virtual void glVertex3s(GLshort x,GLshort y,GLshort z);
        virtual void glVertex4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
        virtual void glVertex4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
        virtual void glVertex4i(GLint x,GLint y,GLint z,GLint w);
        virtual void glVertex4s(GLshort x,GLshort y,GLshort z,GLshort w);
        virtual void glVertex2dv(const GLdouble* v);
        virtual void glVertex2fv(const GLfloat* v);
        virtual void glVertex2iv(const GLint* v);
        virtual void glVertex2sv(const GLshort* v);
        virtual void glVertex3dv(const GLdouble* v);
        virtual void glVertex3fv(const GLfloat* v);
        virtual void glVertex3iv(const GLint* v);
        virtual void glVertex3sv(const GLshort* v);
        virtual void glVertex4dv(const GLdouble* v);
        virtual void glVertex4fv(const GLfloat* v);
        virtual void glVertex4iv(const GLint* v);
        virtual void glVertex4sv(const GLshort* v);
        virtual void glNormal3b(GLbyte nx,GLbyte ny,GLbyte nz);
        virtual void glNormal3d(GLdouble nx,GLdouble ny,GLdouble nz);
        virtual void glNormal3f(GLfloat nx,GLfloat ny,GLfloat nz);
        virtual void glNormal3i(GLint nx,GLint ny,GLint nz);
        virtual void glNormal3s(GLshort nx,GLshort ny,GLshort nz);
        virtual void glNormal3bv(const GLbyte* v);
        virtual void glNormal3dv(const GLdouble* v);
        virtual void glNormal3fv(const GLfloat* v);
        virtual void glNormal3iv(const GLint* v);
        virtual void glNormal3sv(const GLshort* v);
        virtual void glIndexd(GLdouble c);
        virtual void glIndexf(GLfloat c);
        virtual void glIndexi(GLint c);
        virtual void glIndexs(GLshort c);
        virtual void glIndexub(GLubyte c);
        virtual void glIndexdv(const GLdouble* c);
        virtual void glIndexfv(const GLfloat* c);
        virtual void glIndexiv(const GLint* c);
        virtual void glIndexsv(const GLshort* c);
        virtual void glIndexubv(const GLubyte* c);
        virtual void glColor3b(GLbyte red,GLbyte green,GLbyte blue);
        virtual void glColor3d(GLdouble red,GLdouble green,GLdouble blue);
        virtual void glColor3f(GLfloat red,GLfloat green,GLfloat blue);
        virtual void glColor3i(GLint red,GLint green,GLint blue);
        virtual void glColor3s(GLshort red,GLshort green,GLshort blue);
        virtual void glColor3ub(GLubyte red,GLubyte green,GLubyte blue);
        virtual void glColor3ui(GLuint red,GLuint green,GLuint blue);
        virtual void glColor3us(GLushort red,GLushort green,GLushort blue);
        virtual void glColor4b(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha);
        virtual void glColor4d(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha);
        virtual void glColor4f(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
        virtual void glColor4i(GLint red,GLint green,GLint blue,GLint alpha);
        virtual void glColor4s(GLshort red,GLshort green,GLshort blue,GLshort alpha);
        virtual void glColor4ub(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha);
        virtual void glColor4ui(GLuint red,GLuint green,GLuint blue,GLuint alpha);
        virtual void glColor4us(GLushort red,GLushort green,GLushort blue,GLushort alpha);
        virtual void glColor3bv(const GLbyte* v);
        virtual void glColor3dv(const GLdouble* v);
        virtual void glColor3fv(const GLfloat* v);
        virtual void glColor3iv(const GLint* v);
        virtual void glColor3sv(const GLshort* v);
        virtual void glColor3ubv(const GLubyte* v);
        virtual void glColor3uiv(const GLuint* v);
        virtual void glColor3usv(const GLushort* v);
        virtual void glColor4bv(const GLbyte* v);
        virtual void glColor4dv(const GLdouble* v);
        virtual void glColor4fv(const GLfloat* v);
        virtual void glColor4iv(const GLint* v);
        virtual void glColor4sv(const GLshort* v);
        virtual void glColor4ubv(const GLubyte* v);
        virtual void glColor4uiv(const GLuint* v);
        virtual void glColor4usv(const GLushort* v);
        virtual void glTexCoord1d(GLdouble s);
        virtual void glTexCoord1f(GLfloat s);
        virtual void glTexCoord1i(GLint s);
        virtual void glTexCoord1s(GLshort s);
        virtual void glTexCoord2d(GLdouble s,GLdouble t);
        virtual void glTexCoord2f(GLfloat s,GLfloat t);
        virtual void glTexCoord2i(GLint s,GLint t);
        virtual void glTexCoord2s(GLshort s,GLshort t);
        virtual void glTexCoord3d(GLdouble s,GLdouble t,GLdouble r);
        virtual void glTexCoord3f(GLfloat s,GLfloat t,GLfloat r);
        virtual void glTexCoord3i(GLint s,GLint t,GLint r);
        virtual void glTexCoord3s(GLshort s,GLshort t,GLshort r);
        virtual void glTexCoord4d(GLdouble s,GLdouble t,GLdouble r,GLdouble q);
        virtual void glTexCoord4f(GLfloat s,GLfloat t,GLfloat r,GLfloat q);
        virtual void glTexCoord4i(GLint s,GLint t,GLint r,GLint q);
        virtual void glTexCoord4s(GLshort s,GLshort t,GLshort r,GLshort q);
        virtual void glTexCoord1dv(const GLdouble* v);
        virtual void glTexCoord1fv(const GLfloat* v);
        virtual void glTexCoord1iv(const GLint* v);
        virtual void glTexCoord1sv(const GLshort* v);
        virtual void glTexCoord2dv(const GLdouble* v);
        virtual void glTexCoord2fv(const GLfloat* v);
        virtual void glTexCoord2iv(const GLint* v);
        virtual void glTexCoord2sv(const GLshort* v);
        virtual void glTexCoord3dv(const GLdouble* v);
        virtual void glTexCoord3fv(const GLfloat* v);
        virtual void glTexCoord3iv(const GLint* v);
        virtual void glTexCoord3sv(const GLshort* v);
        virtual void glTexCoord4dv(const GLdouble* v);
        virtual void glTexCoord4fv(const GLfloat* v);
        virtual void glTexCoord4iv(const GLint* v);
        virtual void glTexCoord4sv(const GLshort* v);
        virtual void glRasterPos2d(GLdouble x,GLdouble y);
        virtual void glRasterPos2f(GLfloat x,GLfloat y);
        virtual void glRasterPos2i(GLint x,GLint y);
        virtual void glRasterPos2s(GLshort x,GLshort y);
        virtual void glRasterPos3d(GLdouble x,GLdouble y,GLdouble z);
        virtual void glRasterPos3f(GLfloat x,GLfloat y,GLfloat z);
        virtual void glRasterPos3i(GLint x,GLint y,GLint z);
        virtual void glRasterPos3s(GLshort x,GLshort y,GLshort z);
        virtual void glRasterPos4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
        virtual void glRasterPos4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
        virtual void glRasterPos4i(GLint x,GLint y,GLint z,GLint w);
        virtual void glRasterPos4s(GLshort x,GLshort y,GLshort z,GLshort w);
        virtual void glRasterPos2dv(const GLdouble* v);
        virtual void glRasterPos2fv(const GLfloat* v);
        virtual void glRasterPos2iv(const GLint* v);
        virtual void glRasterPos2sv(const GLshort* v);
        virtual void glRasterPos3dv(const GLdouble* v);
        virtual void glRasterPos3fv(const GLfloat* v);
        virtual void glRasterPos3iv(const GLint* v);
        virtual void glRasterPos3sv(const GLshort* v);
        virtual void glRasterPos4dv(const GLdouble* v);
        virtual void glRasterPos4fv(const GLfloat* v);
        virtual void glRasterPos4iv(const GLint* v);
        virtual void glRasterPos4sv(const GLshort* v);
        virtual void glRectd(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2);
        virtual void glRectf(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2);
        virtual void glRecti(GLint x1,GLint y1,GLint x2,GLint y2);
        virtual void glRects(GLshort x1,GLshort y1,GLshort x2,GLshort y2);
        virtual void glRectdv(const GLdouble* v1,const GLdouble* v2);
        virtual void glRectfv(const GLfloat* v1,const GLfloat* v2);
        virtual void glRectiv(const GLint* v1,const GLint* v2);
        virtual void glRectsv(const GLshort* v1,const GLshort* v2);
        virtual void glVertexPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr);
        virtual void glNormalPointer(GLenum type,GLsizei stride,const GLvoid* ptr);
        virtual void glColorPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr);
        virtual void glIndexPointer(GLenum type,GLsizei stride,const GLvoid* ptr);
        virtual void glTexCoordPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr);
        virtual void glEdgeFlagPointer(GLsizei stride,const GLvoid* ptr);
        virtual void glGetPointerv(GLenum pname,GLvoid** params);
        virtual void glArrayElement(GLint i);
        virtual void glDrawArrays(GLenum mode,GLint first,GLsizei count);
        virtual void glDrawElements(GLenum mode,GLsizei count,GLenum type,const GLvoid* indices);
        virtual void glInterleavedArrays(GLenum format,GLsizei stride,const GLvoid* pointer);
        virtual void glShadeModel(GLenum mode);
        virtual void glLightf(GLenum light,GLenum pname,GLfloat param);
        virtual void glLighti(GLenum light,GLenum pname,GLint param);
        virtual void glLightfv(GLenum light,GLenum pname,const GLfloat* params);
        virtual void glLightiv(GLenum light,GLenum pname,const GLint* params);
        virtual void glGetLightfv(GLenum light,GLenum pname,GLfloat* params);
        virtual void glGetLightiv(GLenum light,GLenum pname,GLint* params);
        virtual void glLightModelf(GLenum pname,GLfloat param);
        virtual void glLightModeli(GLenum pname,GLint param);
        virtual void glLightModelfv(GLenum pname,const GLfloat* params);
        virtual void glLightModeliv(GLenum pname,const GLint* params);
        virtual void glMaterialf(GLenum face,GLenum pname,GLfloat param);
        virtual void glMateriali(GLenum face,GLenum pname,GLint param);
        virtual void glMaterialfv(GLenum face,GLenum pname,const GLfloat* params);
        virtual void glMaterialiv(GLenum face,GLenum pname,const GLint* params);
        virtual void glGetMaterialfv(GLenum face,GLenum pname,GLfloat* params);
        virtual void glGetMaterialiv(GLenum face,GLenum pname,GLint* params);
        virtual void glColorMaterial(GLenum face,GLenum mode);
        virtual void glPixelZoom(GLfloat xfactor,GLfloat yfactor);
        virtual void glPixelStoref(GLenum pname,GLfloat param);
        virtual void glPixelStorei(GLenum pname,GLint param);
        virtual void glPixelTransferf(GLenum pname,GLfloat param);
        virtual void glPixelTransferi(GLenum pname,GLint param);
        virtual void glPixelMapfv(GLenum map,GLsizei mapsize,const GLfloat* values);
        virtual void glPixelMapuiv(GLenum map,GLsizei mapsize,const GLuint* values);
        virtual void glPixelMapusv(GLenum map,GLsizei mapsize,const GLushort* values);
        virtual void glGetPixelMapfv(GLenum map,GLfloat* values);
        virtual void glGetPixelMapuiv(GLenum map,GLuint* values);
        virtual void glGetPixelMapusv(GLenum map,GLushort* values);
        virtual void glBitmap(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte* bitmap);
        virtual void glReadPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid* pixels);
        virtual void glDrawPixels(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glCopyPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type);
        virtual void glStencilFunc(GLenum func,GLint ref,GLuint mask);
        virtual void glStencilMask(GLuint mask);
        virtual void glStencilOp(GLenum fail,GLenum zfail,GLenum zpass);
        virtual void glClearStencil(GLint s);
        virtual void glTexGend(GLenum coord,GLenum pname,GLdouble param);
        virtual void glTexGenf(GLenum coord,GLenum pname,GLfloat param);
        virtual void glTexGeni(GLenum coord,GLenum pname,GLint param);
        virtual void glTexGendv(GLenum coord,GLenum pname,const GLdouble* params);
        virtual void glTexGenfv(GLenum coord,GLenum pname,const GLfloat* params);
        virtual void glTexGeniv(GLenum coord,GLenum pname,const GLint* params);
        virtual void glGetTexGendv(GLenum coord,GLenum pname,GLdouble* params);
        virtual void glGetTexGenfv(GLenum coord,GLenum pname,GLfloat* params);
        virtual void glGetTexGeniv(GLenum coord,GLenum pname,GLint* params);
        virtual void glTexEnvf(GLenum target,GLenum pname,GLfloat param);
        virtual void glTexEnvi(GLenum target,GLenum pname,GLint param);
        virtual void glTexEnvfv(GLenum target,GLenum pname,const GLfloat* params);
        virtual void glTexEnviv(GLenum target,GLenum pname,const GLint* params);
        virtual void glGetTexEnvfv(GLenum target,GLenum pname,GLfloat* params);
        virtual void glGetTexEnviv(GLenum target,GLenum pname,GLint* params);
        virtual void glTexParameterf(GLenum target,GLenum pname,GLfloat param);
        virtual void glTexParameteri(GLenum target,GLenum pname,GLint param);
        virtual void glTexParameterfv(GLenum target,GLenum pname,const GLfloat* params);
        virtual void glTexParameteriv(GLenum target,GLenum pname,const GLint* params);
        virtual void glGetTexParameterfv(GLenum target,GLenum pname,GLfloat* params);
        virtual void glGetTexParameteriv(GLenum target,GLenum pname,GLint* params);
        virtual void glGetTexLevelParameterfv(GLenum target,GLint level,GLenum pname,GLfloat* params);
        virtual void glGetTexLevelParameteriv(GLenum target,GLint level,GLenum pname,GLint* params);
        virtual void glTexImage1D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glTexImage2D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glGetTexImage(GLenum target,GLint level,GLenum format,GLenum type,GLvoid* pixels);
        virtual void glGenTextures(GLsizei n,GLuint* textures);
        virtual void glDeleteTextures(GLsizei n,const GLuint* textures);
        virtual void glBindTexture(GLenum target,GLuint texture);
        virtual void glPrioritizeTextures(GLsizei n,const GLuint* textures,const GLclampf* priorities);
        virtual GLboolean glAreTexturesResident(GLsizei n,const GLuint* textures,GLboolean* residences);
        virtual GLboolean glIsTexture(GLuint texture);
        virtual void glTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glCopyTexImage1D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border);
        virtual void glCopyTexImage2D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border);
        virtual void glCopyTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
        virtual void glCopyTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
        virtual void glMap1d(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble* points);
        virtual void glMap1f(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat* points);
        virtual void glMap2d(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble* points);
        virtual void glMap2f(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat* points);
        virtual void glGetMapdv(GLenum target,GLenum query,GLdouble* v);
        virtual void glGetMapfv(GLenum target,GLenum query,GLfloat* v);
        virtual void glGetMapiv(GLenum target,GLenum query,GLint* v);
        virtual void glEvalCoord1d(GLdouble u);
        virtual void glEvalCoord1f(GLfloat u);
        virtual void glEvalCoord1dv(const GLdouble* u);
        virtual void glEvalCoord1fv(const GLfloat* u);
        virtual void glEvalCoord2d(GLdouble u,GLdouble v);
        virtual void glEvalCoord2f(GLfloat u,GLfloat v);
        virtual void glEvalCoord2dv(const GLdouble* u);
        virtual void glEvalCoord2fv(const GLfloat* u);
        virtual void glMapGrid1d(GLint un,GLdouble u1,GLdouble u2);
        virtual void glMapGrid1f(GLint un,GLfloat u1,GLfloat u2);
        virtual void glMapGrid2d(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2);
        virtual void glMapGrid2f(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2);
        virtual void glEvalPoint1(GLint i);
        virtual void glEvalPoint2(GLint i,GLint j);
        virtual void glEvalMesh1(GLenum mode,GLint i1,GLint i2);
        virtual void glEvalMesh2(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2);
        virtual void glFogf(GLenum pname,GLfloat param);
        virtual void glFogi(GLenum pname,GLint param);
        virtual void glFogfv(GLenum pname,const GLfloat* params);
        virtual void glFogiv(GLenum pname,const GLint* params);
        virtual void glFeedbackBuffer(GLsizei size,GLenum type,GLfloat* buffer);
        virtual void glPassThrough(GLfloat token);
        virtual void glSelectBuffer(GLsizei size,GLuint* buffer);
        virtual void glInitNames(void);
        virtual void glLoadName(GLuint name);
        virtual void glPushName(GLuint name);
        virtual void glPopName(void);
        virtual void glDrawRangeElements(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid* indices);
        virtual void glTexImage3D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid* pixels);
        virtual void glCopyTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
        virtual void glColorTable(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid* table);
        virtual void glColorSubTable(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid* data);
        virtual void glColorTableParameteriv(GLenum target,GLenum pname,const GLint* params);
        virtual void glColorTableParameterfv(GLenum target,GLenum pname,const GLfloat* params);
        virtual void glCopyColorSubTable(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width);
        virtual void glCopyColorTable(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width);
        virtual void glGetColorTable(GLenum target,GLenum format,GLenum type,GLvoid* table);
        virtual void glGetColorTableParameterfv(GLenum target,GLenum pname,GLfloat* params);
        virtual void glGetColorTableParameteriv(GLenum target,GLenum pname,GLint* params);
        virtual void glBlendEquation(GLenum mode);
        virtual void glBlendColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha);
        virtual void glHistogram(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink);
        virtual void glResetHistogram(GLenum target);
        virtual void glGetHistogram(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid* values);
        virtual void glGetHistogramParameterfv(GLenum target,GLenum pname,GLfloat* params);
        virtual void glGetHistogramParameteriv(GLenum target,GLenum pname,GLint* params);
        virtual void glMinmax(GLenum target,GLenum internalformat,GLboolean sink);
        virtual void glResetMinmax(GLenum target);
        virtual void glGetMinmax(GLenum target,GLboolean reset,GLenum format,GLenum types,GLvoid* values);
        virtual void glGetMinmaxParameterfv(GLenum target,GLenum pname,GLfloat* params);
        virtual void glGetMinmaxParameteriv(GLenum target,GLenum pname,GLint* params);
        virtual void glConvolutionFilter1D(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid* image);
        virtual void glConvolutionFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* image);
        virtual void glConvolutionParameterf(GLenum target,GLenum pname,GLfloat params);
        virtual void glConvolutionParameterfv(GLenum target,GLenum pname,const GLfloat* params);
        virtual void glConvolutionParameteri(GLenum target,GLenum pname,GLint params);
        virtual void glConvolutionParameteriv(GLenum target,GLenum pname,const GLint* params);
        virtual void glCopyConvolutionFilter1D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width);
        virtual void glCopyConvolutionFilter2D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height);
        virtual void glGetConvolutionFilter(GLenum target,GLenum format,GLenum type,GLvoid* image);
        virtual void glGetConvolutionParameterfv(GLenum target,GLenum pname,GLfloat* params);
        virtual void glGetConvolutionParameteriv(GLenum target,GLenum pname,GLint* params);
        virtual void glSeparableFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* row,const GLvoid* column);
        virtual void glGetSeparableFilter(GLenum target,GLenum format,GLenum type,GLvoid* row,GLvoid* column,GLvoid* span);
        virtual void glActiveTexture(GLenum texture);
        virtual void glClientActiveTexture(GLenum texture);
        virtual void glCompressedTexImage1D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid* data);
        virtual void glCompressedTexImage2D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid* data);
        virtual void glCompressedTexImage3D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid* data);
        virtual void glCompressedTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid* data);
        virtual void glCompressedTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid* data);
        virtual void glCompressedTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid* data);
        virtual void glGetCompressedTexImage(GLenum target,GLint lod,GLvoid* img);
        virtual void glMultiTexCoord1d(GLenum target,GLdouble s);
        virtual void glMultiTexCoord1dv(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord1f(GLenum target,GLfloat s);
        virtual void glMultiTexCoord1fv(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord1i(GLenum target,GLint s);
        virtual void glMultiTexCoord1iv(GLenum target,const GLint* v);
        virtual void glMultiTexCoord1s(GLenum target,GLshort s);
        virtual void glMultiTexCoord1sv(GLenum target,const GLshort* v);
        virtual void glMultiTexCoord2d(GLenum target,GLdouble s,GLdouble t);
        virtual void glMultiTexCoord2dv(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord2f(GLenum target,GLfloat s,GLfloat t);
        virtual void glMultiTexCoord2fv(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord2i(GLenum target,GLint s,GLint t);
        virtual void glMultiTexCoord2iv(GLenum target,const GLint* v);
        virtual void glMultiTexCoord2s(GLenum target,GLshort s,GLshort t);
        virtual void glMultiTexCoord2sv(GLenum target,const GLshort* v);
        virtual void glMultiTexCoord3d(GLenum target,GLdouble s,GLdouble t,GLdouble r);
        virtual void glMultiTexCoord3dv(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord3f(GLenum target,GLfloat s,GLfloat t,GLfloat r);
        virtual void glMultiTexCoord3fv(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord3i(GLenum target,GLint s,GLint t,GLint r);
        virtual void glMultiTexCoord3iv(GLenum target,const GLint* v);
        virtual void glMultiTexCoord3s(GLenum target,GLshort s,GLshort t,GLshort r);
        virtual void glMultiTexCoord3sv(GLenum target,const GLshort* v);
        virtual void glMultiTexCoord4d(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q);
        virtual void glMultiTexCoord4dv(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord4f(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q);
        virtual void glMultiTexCoord4fv(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord4i(GLenum target,GLint s,GLint t,GLint r,GLint q);
        virtual void glMultiTexCoord4iv(GLenum target,const GLint* v);
        virtual void glMultiTexCoord4s(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q);
        virtual void glMultiTexCoord4sv(GLenum target,const GLshort* v);
        virtual void glLoadTransposeMatrixd(const GLdouble* m);
        virtual void glLoadTransposeMatrixf(const GLfloat* m);
        virtual void glMultTransposeMatrixd(const GLdouble* m);
        virtual void glMultTransposeMatrixf(const GLfloat* m);
        virtual void glSampleCoverage(GLclampf value,GLboolean invert);
        virtual void glActiveTextureARB(GLenum texture);
        virtual void glClientActiveTextureARB(GLenum texture);
        virtual void glMultiTexCoord1dARB(GLenum target,GLdouble s);
        virtual void glMultiTexCoord1dvARB(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord1fARB(GLenum target,GLfloat s);
        virtual void glMultiTexCoord1fvARB(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord1iARB(GLenum target,GLint s);
        virtual void glMultiTexCoord1ivARB(GLenum target,const GLint* v);
        virtual void glMultiTexCoord1sARB(GLenum target,GLshort s);
        virtual void glMultiTexCoord1svARB(GLenum target,const GLshort* v);
        virtual void glMultiTexCoord2dARB(GLenum target,GLdouble s,GLdouble t);
        virtual void glMultiTexCoord2dvARB(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord2fARB(GLenum target,GLfloat s,GLfloat t);
        virtual void glMultiTexCoord2fvARB(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord2iARB(GLenum target,GLint s,GLint t);
        virtual void glMultiTexCoord2ivARB(GLenum target,const GLint* v);
        virtual void glMultiTexCoord2sARB(GLenum target,GLshort s,GLshort t);
        virtual void glMultiTexCoord2svARB(GLenum target,const GLshort* v);
        virtual void glMultiTexCoord3dARB(GLenum target,GLdouble s,GLdouble t,GLdouble r);
        virtual void glMultiTexCoord3dvARB(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord3fARB(GLenum target,GLfloat s,GLfloat t,GLfloat r);
        virtual void glMultiTexCoord3fvARB(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord3iARB(GLenum target,GLint s,GLint t,GLint r);
        virtual void glMultiTexCoord3ivARB(GLenum target,const GLint* v);
        virtual void glMultiTexCoord3sARB(GLenum target,GLshort s,GLshort t,GLshort r);
        virtual void glMultiTexCoord3svARB(GLenum target,const GLshort* v);
        virtual void glMultiTexCoord4dARB(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q);
        virtual void glMultiTexCoord4dvARB(GLenum target,const GLdouble* v);
        virtual void glMultiTexCoord4fARB(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q);
        virtual void glMultiTexCoord4fvARB(GLenum target,const GLfloat* v);
        virtual void glMultiTexCoord4iARB(GLenum target,GLint s,GLint t,GLint r,GLint q);
        virtual void glMultiTexCoord4ivARB(GLenum target,const GLint* v);
        virtual void glMultiTexCoord4sARB(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q);
        virtual void glMultiTexCoord4svARB(GLenum target,const GLshort* v);
        virtual void glBlendEquationSeparateATI(GLenum modeRGB,GLenum modeA);
        virtual void glEGLImageTargetTexture2DOES(GLenum target,GLeglImageOES image);
        virtual void glEGLImageTargetRenderbufferStorageOES(GLenum target,GLeglImageOES image);
    };
} //namespace ve
